{"version":3,"file":"js/873.e3c33794.js","mappings":"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","sources":["webpack://test/./src/shared/composables/useRouteFullPath.ts","webpack://test/../../../src/components/VBreadcrumbs/VBreadcrumbsDivider.tsx","webpack://test/../../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx","webpack://test/../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx","webpack://test/./src/pages/settings/base-wrapper.vue?0328","webpack://test/./src/pages/settings/base-wrapper.vue","webpack://test/./src/pages/settings/base-wrapper.vue?f7db"],"sourcesContent":["import { ref, watch } from \"vue\";\r\nimport { RouteLocationRaw, useRoute } from \"vue-router\";\r\n\r\n// Возвращает массив всех route в дереве полного пути, для корректной работы следует указывать meta name на нужном языке\r\ntype RoutePath = {\r\n    route: RouteLocationRaw;\r\n    title: string;\r\n    disabled: boolean;\r\n};\r\nexport const useRouteFullPath = () => {\r\n    const fullPath = ref<Array<RoutePath>>([]);\r\n    const route = useRoute();\r\n    //TODO доработать для путей с параметрами\r\n    watch(\r\n        () => route.matched,\r\n        (newMathced) => {\r\n            const fullPathMap = new Map<string, RoutePath>();\r\n            [...newMathced].forEach((match, index) => {\r\n                const title = match?.meta?.name ?? \"\";\r\n                const name: string = match?.meta?.routeName ?? \"\";\r\n                fullPathMap.set(match.path, {\r\n                    route: {\r\n                        path: match.path,\r\n                        name: name,\r\n                        params: route.params,\r\n                    },\r\n                    title,\r\n                    disabled: index === newMathced.length - 1,\r\n                });\r\n            });\r\n            fullPath.value = Array.from(fullPathMap.values());\r\n            return;\r\n        },\r\n        { immediate: true }\r\n    );\r\n    return { fullPath };\r\n};\r\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsDividerProps = propsFactory({\n  divider: [Number, String],\n\n  ...makeComponentProps(),\n}, 'VBreadcrumbsDivider')\n\nexport const VBreadcrumbsDivider = genericComponent()({\n  name: 'VBreadcrumbsDivider',\n\n  props: makeVBreadcrumbsDividerProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <li\n        class={[\n          'v-breadcrumbs-divider',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots?.default?.() ?? props.divider }\n      </li>\n    ))\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbsDivider = InstanceType<typeof VBreadcrumbsDivider>\n","// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({ tag: 'li' }),\n}, 'VBreadcrumbsItem')\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: makeVBreadcrumbsItemProps(),\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            textColorStyles.value,\n            props.style,\n          ]}\n          aria-current={ isActive.value ? 'page' : undefined }\n        >\n          { !link.isLink.value ? slots.default?.() ?? props.title : (\n            <a\n              class=\"v-breadcrumbs-item--link\"\n              href={ link.href.value }\n              aria-current={ isActive.value ? 'page' : undefined }\n              onClick={ link.navigate }\n            >\n              { slots.default?.() ?? props.title }\n            </a>\n          )}\n        </props.tag>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n","// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type BreadcrumbItem = string | (Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n})\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: T, index: number }\n    divider: { item: T, index: number }\n    item: { item: T, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settings-wrapper\" }\n\nimport { RouterView, RouterLink } from \"vue-router\";\r\nimport { useRouteFullPath } from \"@/shared/composables/useRouteFullPath\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'base-wrapper',\n  setup(__props) {\n\r\nconst { fullPath } = useRouteFullPath();\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_breadcrumbs = _resolveComponent(\"v-breadcrumbs\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", _hoisted_1, [\n    _createVNode(_component_v_breadcrumbs, {\n      class: \"main__header mb-4\",\n      tag: \"nav\",\n      style: { padding: 0 },\n      items: _unref(fullPath)\n    }, {\n      item: _withCtx(({ item }) => [\n        _createVNode(_unref(RouterLink), {\n          to: item.route\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(item.title), 1)\n          ]),\n          _: 2\n        }, 1032, [\"to\"])\n      ]),\n      _: 1\n    }, 8, [\"items\"]),\n    _createVNode(_unref(RouterView))\n  ]))\n}\n}\n\n})","<template>\r\n    <section class=\"settings-wrapper\">\r\n        <v-breadcrumbs\r\n            class=\"main__header mb-4\"\r\n            tag=\"nav\"\r\n            :style=\"{ padding: 0 }\"\r\n            :items=\"fullPath\"\r\n        >\r\n            <template #item=\"{ item }\">\r\n                <RouterLink :to=\"item.route\">{{ item.title }}</RouterLink>\r\n            </template>\r\n        </v-breadcrumbs>\r\n        <RouterView />\r\n    </section>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { RouterView, RouterLink } from \"vue-router\";\r\nimport { useRouteFullPath } from \"@/shared/composables/useRouteFullPath\";\r\nconst { fullPath } = useRouteFullPath();\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./base-wrapper.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./base-wrapper.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useRouteFullPath","fullPath","ref","route","useRoute","watch","matched","newMathced","fullPathMap","Map","forEach","match","index","title","meta","name","routeName","set","path","params","disabled","length","value","Array","from","values","immediate","makeVBreadcrumbsDividerProps","propsFactory","divider","Number","String","makeComponentProps","VBreadcrumbsDivider","genericComponent","props","setup","_ref","slots","useRender","_createVNode","class","style","default","makeVBreadcrumbsItemProps","active","Boolean","activeClass","activeColor","color","makeRouterProps","makeTagProps","tag","VBreadcrumbsItem","attrs","link","useLink","isActive","computed","textColorClasses","textColorStyles","useTextColor","undefined","isLink","href","navigate","makeVBreadcrumbsProps","bgColor","type","icon","IconValue","items","makeDensityProps","makeRoundedProps","VBreadcrumbs","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","densityClasses","useDensity","roundedClasses","useRounded","provideDefaults","map","item","raw","hasPrepend","prepend","VDefaultsProvider","VIcon","start","_ref2","array","_Fragment","_mergeProps","_hoisted_1","_defineComponent","__name","__props","_ctx","_cache","_openBlock","_createElementBlock","_component_v_breadcrumbs","padding","_unref","_withCtx","RouterLink","to","_createTextVNode","_toDisplayString","_","RouterView","__exports__"],"sourceRoot":""}