{"version":3,"file":"js/367.726a4d0a.js","mappings":"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","sources":["webpack://test/./src/pages/stat/index.vue?6628","webpack://test/./src/pages/stat/index.vue","webpack://test/./src/pages/stat/index.vue?d51f","webpack://test/./src/pages/stat/index.ts"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-575b8c1e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"stat-wrapper\" }\nconst _hoisted_2 = [\"onClick\"]\n\nimport { storeToRefs } from \"pinia\";\r\nimport { ref, onMounted, computed } from \"vue\";\r\n\r\n// import { ApiStat } from \"@/shared/api/modules/Stat\";\r\n// import { UserInfoStat } from \"@/entities/user-info/types\";\r\nimport { StatModel } from \"@/entities/stat/model\";\r\nimport { useStatStore } from \"@/entities/stat/store\";\r\nimport { Stat } from \"@/entities/stat/types\";\r\n\r\nimport { router } from \"@/app/providers\";\r\nimport { ROUTE_NAMES } from \"@/pages\";\r\nimport { Ref } from \"vue\";\r\nimport { YandexDirectAuth } from \"@/entities/yandex-direct/types\";\r\nexport interface tableData {\r\n    number_pr: number;\r\n    name_pr: string;\r\n    visits_pr: number | null;\r\n    leads_pr: number | null;\r\n    revenue_pr: number | null;\r\n    fast_pr: string;\r\n    status_pr: true;\r\n    upd_deals_pr: string;\r\n    accesses_pr: boolean;\r\n}\r\n// TODO Ссылка на отчеты и уведомления ??\r\nconst linkToReposts = \"/analitics/report/\";\r\nconst linkToNotifications = \"/analitics/notifications/\";\r\n//TODO Разбить на блоки бизнес логику\r\n// const desserts = [\r\n//     {\r\n//         number_pr: 256195,\r\n//         name_pr: \"Проект без названия\",\r\n//         visits_pr: 78,\r\n//         leads_pr: 24,\r\n//         revenue_pr: 1000000,\r\n//         fast_pr: \"link1\",\r\n//         status_pr: true,\r\n//         upd_deals_pr: \"2 секунды назад\",\r\n//         accesses_pr: \"botton\",\r\n//     },\r\n// ];\r\n\r\n// const result = ref(desserts);\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst statistics = ref<Stat[]>([]);\r\n\r\nconst getStatistics = async () => {\r\n    try {\r\n        const result = await StatModel.getAllStat();\r\n        statistics.value = result;\r\n    } catch (error) {\r\n        console.error(\"Error fetching statistics:\", error);\r\n    }\r\n};\r\n\r\nconst navigateTo = (value: string) => {};\r\n\r\nconst { stats, selectedStatId } = storeToRefs(useStatStore());\r\nconst { setSelectedStatId } = useStatStore();\r\n\r\nconst selectedStat = computed<Stat | undefined>({\r\n    get: () => {\r\n        return stats.value?.find((stat) => {\r\n            return stat.stat_id === selectedStatId.value;\r\n        });\r\n    },\r\n    set: (value) => {\r\n        if (!value) return;\r\n        const setResult = setSelectedStatId(value.stat_id);\r\n        if (setResult) {\r\n            router\r\n                .push({\r\n                    name: ROUTE_NAMES.Main,\r\n                    params: { statId: value.stat_id },\r\n                })\r\n                .then(() => {\r\n                    router.go(0);\r\n                });\r\n        }\r\n    },\r\n});\r\n\r\nconst headers = [\r\n    // {\r\n    //     title: \"№\",\r\n    //     align: \"start\",\r\n    //     sortable: true,\r\n    //     key: \"number_pr\",\r\n    // },\r\n    {\r\n        title: \"Название проекта\",\r\n        key: \"name_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n        width: 200,\r\n    },\r\n    {\r\n        title: \"Визиты за месяц\",\r\n        key: \"visits_pr\",\r\n        align: \"start\",\r\n        sortable: true,\r\n    },\r\n    { title: \"Заявки\", key: \"leads_pr\", align: \"start\", sortable: true },\r\n    { title: \"Выручка\", key: \"revenue_pr\", align: \"start\", sortable: true },\r\n    // {\r\n    //     title: \"Быстрый переход\",\r\n    //     key: \"fast_pr\",\r\n    //     align: \"start\",\r\n    //     sortable: false,\r\n    // },\r\n    {\r\n        title: \"Статус проекта\",\r\n        key: \"status_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n    },\r\n    {\r\n        title: \"Обновление сделок\",\r\n        key: \"upd_deals_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n    },\r\n    // { title: \"Доступы\", key: \"accesses_pr\", align: \"start\", sortable: false },\r\n];\r\nconst tableTitle = ref<any[]>(headers);\r\n// Создаём новый массив объектов типа tableData\r\nconst statComputed = computed(() => {\r\n    return stats.value?.map((obj: any) => {\r\n        return {\r\n            number_pr: obj.stat_id,\r\n            name_pr: obj.name,\r\n            visits_pr: 0,\r\n            leads_pr: 0,\r\n            revenue_pr: 0,\r\n            fast_pr: \"\",\r\n            status_pr: true,\r\n            upd_deals_pr: \"\",\r\n            accesses_pr: \"path\",\r\n        };\r\n    });\r\n});\r\nconst tableDataArray = ref(statComputed);\r\nconst navigate = (id: number) => {\r\n    router.push({\r\n        name: ROUTE_NAMES.MultiChannelAnalytics,\r\n        params: { statId: id },\r\n    });\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_data_table = _resolveComponent(\"v-data-table\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", _hoisted_1, [\n    _createVNode(_component_v_data_table, {\n      headers: tableTitle.value,\n      \"item-value\": \"name\",\n      items: tableDataArray.value,\n      class: \"text-center\"\n    }, {\n      [`item.name_pr`]: _withCtx(({ item }) => [\n        _createElementVNode(\"div\", {\n          onClick: ($event: any) => (navigate(item.number_pr)),\n          class: \"name-project\",\n          style: {\"text-align\":\"left\"}\n        }, _toDisplayString(item.name_pr), 9, _hoisted_2)\n      ]),\n      [`item.fast_pr`]: _withCtx(({ item }) => [\n        _createVNode(_component_v_btn, {\n          color: \"primary\",\n          small: \"\",\n          variant: \"plain\",\n          icon: \"mdi-chart-box-outline\",\n          onClick: ($event: any) => (navigateTo(item.fast_pr))\n        }, null, 8, [\"onClick\"])\n      ]),\n      [`item.status_pr`]: _withCtx(({ item }) => [\n        (item.status_pr)\n          ? (_openBlock(), _createBlock(_component_v_btn, {\n              key: 0,\n              color: \"primary\",\n              small: \"\",\n              variant: \"plain\",\n              icon: \"mdi-heart-pulse\"\n            }))\n          : _createCommentVNode(\"\", true)\n      ]),\n      [`item.accesses_pr`]: _withCtx(({ item }) => [\n        _createVNode(_component_v_btn, {\n          color: \"primary\",\n          disabled: \"\",\n          href: item.accesses_pr\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\" Настроить \")\n          ]),\n          _: 2\n        }, 1032, [\"href\"])\n      ]),\n      _: 2\n    }, 1032, [\"headers\", \"items\"])\n  ]))\n}\n}\n\n})","<template>\r\n    <section class=\"stat-wrapper\">\r\n        <v-data-table\r\n            :headers=\"tableTitle\"\r\n            item-value=\"name\"\r\n            :items=\"tableDataArray\"\r\n            class=\"text-center\"\r\n        >\r\n            <template v-slot:[`item.name_pr`]=\"{ item }\">\r\n                <div\r\n                    @click=\"navigate(item.number_pr)\"\r\n                    class=\"name-project\"\r\n                    style=\"text-align: left\"\r\n                >\r\n                    {{ item.name_pr }}\r\n                </div>\r\n                <!-- <div class=\"name-email\">email@mail.ru</div> -->\r\n            </template>\r\n\r\n            <template v-slot:[`item.fast_pr`]=\"{ item }\">\r\n                <v-btn\r\n                    color=\"primary\"\r\n                    small\r\n                    variant=\"plain\"\r\n                    icon=\"mdi-chart-box-outline\"\r\n                    @click=\"navigateTo(item.fast_pr)\"\r\n                ></v-btn>\r\n            </template>\r\n\r\n            <template v-slot:[`item.status_pr`]=\"{ item }\">\r\n                <v-btn\r\n                    v-if=\"item.status_pr\"\r\n                    color=\"primary\"\r\n                    small\r\n                    variant=\"plain\"\r\n                    icon=\"mdi-heart-pulse\"\r\n                ></v-btn>\r\n            </template>\r\n            <template v-slot:[`item.accesses_pr`]=\"{ item }\">\r\n                <v-btn color=\"primary\" disabled :href=\"item.accesses_pr\">\r\n                    Настроить\r\n                </v-btn>\r\n            </template>\r\n        </v-data-table>\r\n    </section>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { storeToRefs } from \"pinia\";\r\nimport { ref, onMounted, computed } from \"vue\";\r\n\r\n// import { ApiStat } from \"@/shared/api/modules/Stat\";\r\n// import { UserInfoStat } from \"@/entities/user-info/types\";\r\nimport { StatModel } from \"@/entities/stat/model\";\r\nimport { useStatStore } from \"@/entities/stat/store\";\r\nimport { Stat } from \"@/entities/stat/types\";\r\n\r\nimport { router } from \"@/app/providers\";\r\nimport { ROUTE_NAMES } from \"@/pages\";\r\nimport { Ref } from \"vue\";\r\nimport { YandexDirectAuth } from \"@/entities/yandex-direct/types\";\r\nexport interface tableData {\r\n    number_pr: number;\r\n    name_pr: string;\r\n    visits_pr: number | null;\r\n    leads_pr: number | null;\r\n    revenue_pr: number | null;\r\n    fast_pr: string;\r\n    status_pr: true;\r\n    upd_deals_pr: string;\r\n    accesses_pr: boolean;\r\n}\r\n// TODO Ссылка на отчеты и уведомления ??\r\nconst linkToReposts = \"/analitics/report/\";\r\nconst linkToNotifications = \"/analitics/notifications/\";\r\n//TODO Разбить на блоки бизнес логику\r\n// const desserts = [\r\n//     {\r\n//         number_pr: 256195,\r\n//         name_pr: \"Проект без названия\",\r\n//         visits_pr: 78,\r\n//         leads_pr: 24,\r\n//         revenue_pr: 1000000,\r\n//         fast_pr: \"link1\",\r\n//         status_pr: true,\r\n//         upd_deals_pr: \"2 секунды назад\",\r\n//         accesses_pr: \"botton\",\r\n//     },\r\n// ];\r\n\r\n// const result = ref(desserts);\r\n\r\nconst statistics = ref<Stat[]>([]);\r\n\r\nconst getStatistics = async () => {\r\n    try {\r\n        const result = await StatModel.getAllStat();\r\n        statistics.value = result;\r\n    } catch (error) {\r\n        console.error(\"Error fetching statistics:\", error);\r\n    }\r\n};\r\n\r\nconst navigateTo = (value: string) => {};\r\n\r\nconst { stats, selectedStatId } = storeToRefs(useStatStore());\r\nconst { setSelectedStatId } = useStatStore();\r\n\r\nconst selectedStat = computed<Stat | undefined>({\r\n    get: () => {\r\n        return stats.value?.find((stat) => {\r\n            return stat.stat_id === selectedStatId.value;\r\n        });\r\n    },\r\n    set: (value) => {\r\n        if (!value) return;\r\n        const setResult = setSelectedStatId(value.stat_id);\r\n        if (setResult) {\r\n            router\r\n                .push({\r\n                    name: ROUTE_NAMES.Main,\r\n                    params: { statId: value.stat_id },\r\n                })\r\n                .then(() => {\r\n                    router.go(0);\r\n                });\r\n        }\r\n    },\r\n});\r\n\r\nconst headers = [\r\n    // {\r\n    //     title: \"№\",\r\n    //     align: \"start\",\r\n    //     sortable: true,\r\n    //     key: \"number_pr\",\r\n    // },\r\n    {\r\n        title: \"Название проекта\",\r\n        key: \"name_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n        width: 200,\r\n    },\r\n    {\r\n        title: \"Визиты за месяц\",\r\n        key: \"visits_pr\",\r\n        align: \"start\",\r\n        sortable: true,\r\n    },\r\n    { title: \"Заявки\", key: \"leads_pr\", align: \"start\", sortable: true },\r\n    { title: \"Выручка\", key: \"revenue_pr\", align: \"start\", sortable: true },\r\n    // {\r\n    //     title: \"Быстрый переход\",\r\n    //     key: \"fast_pr\",\r\n    //     align: \"start\",\r\n    //     sortable: false,\r\n    // },\r\n    {\r\n        title: \"Статус проекта\",\r\n        key: \"status_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n    },\r\n    {\r\n        title: \"Обновление сделок\",\r\n        key: \"upd_deals_pr\",\r\n        align: \"start\",\r\n        sortable: false,\r\n    },\r\n    // { title: \"Доступы\", key: \"accesses_pr\", align: \"start\", sortable: false },\r\n];\r\nconst tableTitle = ref<any[]>(headers);\r\n// Создаём новый массив объектов типа tableData\r\nconst statComputed = computed(() => {\r\n    return stats.value?.map((obj: any) => {\r\n        return {\r\n            number_pr: obj.stat_id,\r\n            name_pr: obj.name,\r\n            visits_pr: 0,\r\n            leads_pr: 0,\r\n            revenue_pr: 0,\r\n            fast_pr: \"\",\r\n            status_pr: true,\r\n            upd_deals_pr: \"\",\r\n            accesses_pr: \"path\",\r\n        };\r\n    });\r\n});\r\nconst tableDataArray = ref(statComputed);\r\nconst navigate = (id: number) => {\r\n    router.push({\r\n        name: ROUTE_NAMES.MultiChannelAnalytics,\r\n        params: { statId: id },\r\n    });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.name-project {\r\n    text-decoration: underline;\r\n}\r\n.name-project:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.name-email {\r\n    text-align: left;\r\n    font-size: 0.8em;\r\n    color: #888;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=575b8c1e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-575b8c1e\"]])\n\nexport default __exports__","import main from \"./index.vue\";\r\nexport default main;\r\n"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","setup","__props","ref","navigateTo","value","stats","selectedStatId","storeToRefs","useStatStore","setSelectedStatId","headers","computed","get","find","stat","stat_id","set","setResult","router","push","name","ROUTE_NAMES","Main","params","statId","then","go","title","key","align","sortable","width","tableTitle","statComputed","map","obj","number_pr","name_pr","visits_pr","leads_pr","revenue_pr","fast_pr","status_pr","upd_deals_pr","accesses_pr","tableDataArray","navigate","id","MultiChannelAnalytics","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_component_v_data_table","items","_withCtx","item","_createElementVNode","onClick","$event","style","_toDisplayString","_component_v_btn","color","small","variant","icon","_createBlock","_createCommentVNode","disabled","href","default","_createTextVNode","_","__exports__"],"sourceRoot":""}